swagger: '2.0'
info:
  version: 0.1.0
  title: GoBarber API
  description: GoBarber API for https://gobarberapp.net
  termsOfService: 'https://github.com/AlvaroIsrael/gobarber-app/blob/master/gobarber-backend/README.md'
  contact:
    email: israel.nunes.leite@gmail.com
  license:
    name: MIT
    url: 'https://github.com/AlvaroIsrael/gobarber-app/blob/master/gobarber-backend/LICENSE.md'

securityDefinitions:
  JWT:
    description: 'JWT Bearer'
    type: apiKey
    name: Authorization
    in: header

host: 'localhost:3333'

basePath: /api/v1

tags:
  - name: Files
    description: Operations about files.
  - name: Appointments
    description: Operations about appointments.
  - name: Providers
    description: Operations about providers.
  - name: Users
    description: Operations about users.
  - name: Sessions
    description: Operations about sessions.
    externalDocs:
      description: Find out more at
      url: 'https://github.com/AlvaroIsrael/gobarber-app'
  - name: Password
    description: Operations about password recovery.
  - name: Profile
    description: Operations about password reset.
  - name: Docs
    description: Information about app routes using swagger.

schemes:
  - http
  - https

definitions:
  Users:
    required:
      - name
      - email
      - password
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
    example:
      name: 'Go Barber User'
      example: 'docs@gobarberapp.net'
      password: 'pass321456'
  Sessions:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
    example:
      email: 'docs@gobarberapp.net'
      password: 'pass321456'
  InternalServerError:
    properties:
      status:
        type: string
      message:
        type: string
    example:
      status: 'error'
      message: 'Internal server error.'
  UnauthorizedError:
    properties:
      status:
        type: string
      message:
        type: string
    example:
      status: 'error'
      message: 'Missing JWT token.'
  MailAreadyUsedError:
    properties:
      status:
        type: string
      message:
        type: string
    example:
      status: 'error'
      message: 'Email already used.'
  ValidationError:
    properties:
      statusCode:
        type: integer
      error:
        type: string
      message:
        type: string
      validation:
        type: object
        properties:
          body:
            type: object
            properties:
              source:
                type: string
              keys:
                type: array
              message:
                type: string
    example:
      statusCode: 400
      error: 'Bad Request'
      message: 'celebrate request validation failed'
      validation: {
        body: {
          source: 'body',
          keys: [ 'validated field' ],
          message: 'validated field is required',
        }
      }

paths:
  /users:
    post:
      tags:
        - Users
      summary: Return info from newly created user.
      description: "Return a json object info from newly created user."
      parameters:
        - in: body
          name: body
          description: New User
          required: true
          schema:
            $ref: '#/definitions/Users'
      responses:
        '500':
          description: When something goes boing in the server.
          schema:
            $ref: '#/definitions/InternalServerError'
        '400':
          description: When validation error occurs.
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: When email is already used.
          schema:
            $ref: '#/definitions/MailAreadyUsedError'
        '200':
          description: When all parameters are ok.
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              id:
                type: string
              created_at:
                type: string
              updated_at:
                type: string
              avatar_url:
                type: [ 'null', string ]
                example: 'https://gobarberapp.net/4dfcbdea62cdcbc5ba8d-8402007.png'
            example: {
              name: 'Go Barber Team',
              email: 'team@gobarberapp.net',
              id: 'dc25e16e-451c-40ce-8464-4508e318e7ac',
              created_at: '2021-02-24T02:03:16.094Z',
              updated_at: '2021-02-24T02:03:16.094Z',
              avatar_url: null,
            }
  /users/avatar:
    patch:
      tags:
        - Users
      summary: Updates user avatar.
      description: "Updates a user avatar with an image url."
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: avatar
          description: Select an image to upload.
          required: true
          type: file
      responses:
        '500':
          description: When something goes boing in the server.
          schema:
            $ref: '#/definitions/InternalServerError'
        '401':
          description: When not authenticated (missing SWT token).
          schema:
            $ref: '#/definitions/UnauthorizedError'
        '200':
          description: When avatar user is successfully updated.
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  avatar:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  avatar_url:
                    type: string
              token:
                type: string
            example:
              user: {
                id: '16463316-155d-43b8-841d-263a74613c64',
                name: 'Go Barber',
                email: 'test@gobarberapp.net',
                avatar: '4dfcbdea62cdcbc5ba8d-8402007.png',
                created_at: '2021-02-17T19:20:48.506Z',
                updated_at: '2021-02-20T23:27:28.342Z',
                avatar_url: 'https://gobarberapp.net/4dfcbdea62cdcbc5ba8d-8402007.png',
              }
      security: [ { JWT: [ ] } ]
  /sessions:
    post:
      tags:
        - Sessions
      summary: Return a JWT token for an authenticated user.
      description: "Return a json object containing user info and JWT token after user authenticated itself in the app."
      parameters:
        - in: body
          name: body
          description: New Session
          required: true
          schema:
            $ref: '#/definitions/Sessions'
      responses:
        '500':
          description: When something goes boing in the server.
          schema:
            $ref: '#/definitions/InternalServerError'
        '400':
          description: When validation error occurs.
          schema:
            $ref: '#/definitions/ValidationError'
        '200':
          description: When all parameters are ok.
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
                  avatar:
                    type: string
                  created_at:
                    type: string
                  updated_at:
                    type: string
                  avatar_url:
                    type: string
              token:
                type: string
            example:
              user: {
                id: '16463316-155d-43b8-841d-263a74613c64',
                name: 'Go Barber',
                email: 'test@gobarberapp.net',
                avatar: '4dfcbdea62cdcbc5ba8d-8402007.png',
                created_at: '2021-02-17T19:20:48.506Z',
                updated_at: '2021-02-20T23:27:28.342Z',
                avatar_url: 'https://gobarberapp.net/4dfcbdea62cdcbc5ba8d-8402007.png',
              }
              name: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2MTM5MjQ0NzIsImV4cCI6MTYxNDAxMDg3Miwic3ViIjoiMTY0NjMzMTYtMTU1ZC00M2I4LTg0MWQtMjYzYTc0NjEzYzY0In0.kjKz3eBXMJcUpchM2wSXTTSVrAbLRO_tAF2166-vh4o'
      security: [ ]
